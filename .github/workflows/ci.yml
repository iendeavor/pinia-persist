name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Use pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Install
        run: pnpm install

      - name: Lint
        run: pnpm run lint

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Use pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Install
        run: pnpm install

      - name: Test
        run: pnpm run test:run --coverage
        env:
          CI: true

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest

    needs:
      - lint
      - test

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Use pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Install
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Check size
        run: pnpm run check-size

      - name: Publish
        if: github.ref_name == 'main'
        uses: JS-DevTools/npm-publish@v2
        id: publish
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./package.json
          tag: latest
          access: public
          dry-run: false
          check-version: true
          greater-version-only: true

      - name: Tag
        if: github.ref_name == 'main' && steps.publish.outputs.type != 'none'
        uses: anothrNick/github-tag-action@v1
        env:
          CUSTOM_TAG: ${{ matrix.package }}${{ steps.publish.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        if: github.ref_name == 'main' && steps.publish.outputs.type != 'none'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ matrix.package }}${{ steps.publish.outputs.version }}
          body: 'Changelog: https://github.com/iendeavor/pinia-plugin-persistedstate-2/blob/${{ steps.publish.outputs.version }}/CHANGELOG.md'

      - name: Pack
        run: pnpm pack

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: |
            *.tgz

  test-npm-8-node-16:
    runs-on: ubuntu-latest

    needs:
      - build

    name: 'Test example - ${{ matrix.example-directory }}'

    strategy:
      matrix:
        example-directory:
          - nuxt-2-client-example
          - nuxt-bridge-example

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: artifact

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: |
          cd examples/${{matrix.example-directory}}
          npm ci
          npm add ../../*.tgz
          npm run build

  test-npm-8-node-18:
    runs-on: ubuntu-latest

    needs:
      - build

    name: 'Test example - ${{ matrix.example-directory }}'

    strategy:
      matrix:
        example-directory:
          - nuxt-3-universal-example

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: artifact

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: |
          cd examples/${{matrix.example-directory}}
          npm ci
          npm add ../../*.tgz
          npm run build

  test-pnpm-7-node-16:
    runs-on: ubuntu-latest

    needs:
      - build

    name: 'Test example - ${{ matrix.example-directory }}'

    strategy:
      matrix:
        example-directory:
          - vue-2-example

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: artifact

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - run: |
          cd examples/${{matrix.example-directory}}
          pnpm i
          pnpm add ../../*.tgz
          pnpm run build

  test-pnpm-7-node-18:
    runs-on: ubuntu-latest

    needs:
      - build

    name: 'Test example - ${{ matrix.example-directory }}'

    strategy:
      matrix:
        example-directory:
          - ionic-capacitor-preferences
          - localforage-example
          # - pinia-orm-example
          - quasar-example
          - vite-plugin-ssr-example
          - vue-3-example

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: artifact

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - run: |
          cd examples/${{matrix.example-directory}}
          pnpm i
          pnpm add ../../*.tgz
          pnpm run build
